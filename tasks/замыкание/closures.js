// Условие задачи: результат выдается в консоли неверный, нужно найти решение задачи.

const fib = [1, 2, 3, 5, 8, 13];

for (var i = 0; i < fib.length; i++) {
    setTimeout (function() {
        console.log(`fib[${i}] = ${fib[i]}`)
    }, 1500);
};

// Самый простой способ решить без замыканий - можно изменить переменную var на let. 
// Логика такая: у let на каждую итерацию цикла создается абсолютно новая переменная, в то время как переменная, объявленная через var, одна на весь цикл, и при каждой итерации изменяется только ее значение.
// Именно поэтому при объявлении переменной var в результате всегда будет стоять число 6, потому что сначала срабатывает цикл, где все итерации прошли от 0 до 6, когда цикл остановился, и только потом спустя 1.5 секунды (1500) переменная var начинает подставлять свое значение в функцию выводя в консоль. 

// const fib = [1, 2, 3, 5, 8, 13];

// for (let i = 0; i < fib.length; i++) {
//     setTimeout (function() {
//         console.log(`fib[${i}] = ${fib[i]}`)
//     }, 1500);
// };

//        ***

// Решение через замыкание

// const fib = [1, 2, 3, 5, 8, 13];

// for (var i = 0; i < fib.length; i++) {
//     (function (j) {         // создаем функцию с аргументом j
//         setTimeout (function() {
//             console.log(`fib[${j}] = ${fib[j]}`)
//         }, 1500);
//     })(i)                   // в аргумент j передаем значение цикла i 
// };